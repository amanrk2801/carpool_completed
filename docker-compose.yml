version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: carpool-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DATABASE_NAME:-carpool_db}
      MYSQL_USER: ${DATABASE_USERNAME:-carpool_user}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-carpool_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - carpool-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: carpool-backend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-production}
      DATABASE_URL: jdbc:mysql://database:3306/${DATABASE_NAME:-carpool_db}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      DATABASE_USERNAME: ${DATABASE_USERNAME:-carpool_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-carpool_password}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key-change-in-production}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
    ports:
      - "8080:8080"
    volumes:
      - backend_logs:/app/logs
    networks:
      - carpool-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: carpool-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - carpool-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: carpool-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - carpool-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (optional, for multiple backend instances)
  nginx:
    image: nginx:alpine
    container_name: carpool-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - carpool-network
    profiles:
      - load-balancer

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  carpool-network:
    driver: bridge
